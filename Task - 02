#task02

# Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

# Load your dataset
df = pd.read_csv('/content/Titanic-Dataset.csv')

# 1. Summary statistics
print("Summary statistics:")
print(df.describe().T)
print("\nMissing values:\n", df.isnull().sum())

# 2. Histograms and Boxplots for numeric features
numeric_cols = df.select_dtypes(include=['float64', 'int64']).columns

# Histograms
df[numeric_cols].hist(bins=30, figsize=(15, 8))
plt.suptitle('Histograms of Numeric Features')
plt.show()

# Boxplots
plt.figure(figsize=(15, 8))
df[numeric_cols].plot(kind='box', subplots=True, layout=(1, len(numeric_cols)), figsize=(15, 5), sharey=False)
plt.suptitle('Boxplots of Numeric Features')
plt.show()

# 3. Pairplot and Correlation Matrix
# Pairplot (for small datasets)
sns.pairplot(df[numeric_cols])
plt.suptitle('Pairplot of Numeric Features', y=1.02)
plt.show()

# Correlation Matrix
corr = df[numeric_cols].corr()
plt.figure(figsize=(10, 8))
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

# 4. Patterns, Trends, or Anomalies - Interactive Plotly Example
for col in numeric_cols:
    fig = px.histogram(df, x=col, title=f'Interactive Histogram of {col}')
    fig.show()

# 5. Basic feature-level inference example
print("Features with high skewness:")
skewness = df[numeric_cols].skew().sort_values(ascending=False)
print(skewness)

print("\nHighly correlated feature pairs (|corr| > 0.75):")
threshold = 0.75
corr_pairs = corr.abs().unstack().sort_values(ascending=False)
high_corr = corr_pairs[(corr_pairs < 1) & (corr_pairs > threshold)]
print(high_corr)
